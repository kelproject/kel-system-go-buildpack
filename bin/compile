#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
env_dir=$3
buildpack=$(cd "$(dirname $0)/.." && pwd)
arch=$(uname -m|tr A-Z a-z)
if test $arch = x86_64
then arch=amd64
fi
plat=$(uname|tr A-Z a-z)-$arch

steptxt="----->"

step() {
    echo "$steptxt $@"
}

start() {
    echo -n "$steptxt $@... "
}

finished() {
    echo "done"
}

ver="go1.6"
file="$ver.linux-amd64.tar.gz"
url="https://storage.googleapis.com/golang/$file"

if test -d $cache/$ver/go
then
    step "Using $ver"
else
    rm -rf $cache/* # be sure not to build up cruft
    mkdir -p $cache/$ver
    cd $cache/$ver
    start "Installing $ver"
        curl -s $url | tar zxf -
    finished
    cd - >/dev/null
fi

GOROOT=$cache/$ver/go export GOROOT
PATH=$GOROOT/bin:$PATH

cd $build
./scripts/setup.sh
./scripts/build.sh
